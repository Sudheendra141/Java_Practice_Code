import java.util.Arrays;

public class RateInMaze {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
			
		
		int arr[][]= {{1,0,0,0},{1,1,0,1},{1,1,0,0},{0,1,1,1}};
		int n=4;
		int visited[][]=new int[n][n];
		visited[0][0]=1;
		for(int i=0;i<n;i++)for(int j=0;j<n;j++)visited[i][j]=0;
		for(int i=0;i<n;i++)for(int j=0;j<n;j++)System.out.println(arr[i][j]);
		solve(arr,visited,0,0,"->",n);
		System.out.println("end");
	}
	static void solve(int arr[][],int visted[][],int i,int j,String route,int n)
	{
		if(i==n-1 && j==n-1)
		{
			System.out.println(route);
			return ;
		}
		//  going down
		if(i+1<n && arr[i+1][j]!=0 && visted[i+1][j]==0)
		{
			visted[i][j]=1;
			solve(arr,visted,i+1,j,route+"D",n);
			visted[i][j]=0;
		}
		//going up
		if(i-1>=0 && arr[i-1][j]!=0 && visted[i-1][j]==0)
		{
			visted[i][j]=1;
			solve(arr,visted,i-1,j,route+"U",n);
			visted[i][j]=0;
		}
		// left
		if(j-1>=0 && arr[i][j-1]!=0 && visted[i][j-1]==0)
		{
			visted[i][j]=1;
			solve(arr,visted,i,j-1,route+"L",n);
			visted[i][j]=0;
		}
		// right
				if(j+1<n && arr[i][j+1]!=0 && visted[i][j+1]==0)
				{
					visted[i][j]=1;
					solve(arr,visted,i,j+1,route+"R",n);
					visted[i][j]=0;
				}
		
	}

}
